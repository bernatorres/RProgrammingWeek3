## The both function that cache the matrix of an inverse.
## functions do is to create a matrix object that can supply its inverse matrix. 

## The function will be having a special matrix.

makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <-function(y) {
x <-y
inv <<-NULL
}
get <-function(x)
setInverse <-function(solveMATRIX) inv <<-solveMATRIX
getInverse <-function() inv
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}


## This function will compute the inverse of the matrix that is return by the make-cache-matrix.

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
        inv <-x$getInverse()
        if(!is.null(inv))
        {
        message ("getting a cache datas")
        return (inv)
        }
data <-x$get()
inv <<-solo(data)
x$setInverse (inv)
inv
}
